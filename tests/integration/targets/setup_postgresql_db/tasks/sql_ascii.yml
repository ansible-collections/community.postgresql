- name: postgresql SQL_ASCII - create database
  become_user: '{{ pg_user }}'
  become: true
  postgresql_db:
    name: '{{ sql_ascii_db }}'
    encoding: 'SQL_ASCII'
    template: 'template0'

- name: postgresql SQL_ASCII - ensure db exists with proper encoding
  become_user: '{{ pg_user }}'
  become: true
  shell: "psql -c 'SHOW SERVER_ENCODING' --tuples-only --no-align --dbname {{ sql_ascii_db }}"
  register: sql_ascii_db_encoding

- ansible.builtin.assert:
    that:
      - sql_ascii_db_encoding.stdout == 'SQL_ASCII'

- name: postgresql SQL_ASCII - create role
  become_user: '{{ pg_user }}'
  become: true
  postgresql_user:
    name: '{{ sql_ascii_user }}'
    db: '{{ sql_ascii_db }}'
    role_attr_flags: SUPERUSER
    password: '{{ sql_ascii_pass }}'

- name: postgresql SQL_ASCII - ensure role was created
  become: true
  become_user: "{{ pg_user }}"
  shell: "psql -c \"select * from pg_authid where rolname='{{ sql_ascii_user }}';\" -d {{ sql_ascii_db }}"
  register: result

- ansible.builtin.assert:
    that:
      - "result.stdout_lines[-1] == '(1 row)'"
