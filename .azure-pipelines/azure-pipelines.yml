trigger:
  batch: true
  branches:
    include:
      - main
      - stable-*

pr:
  autoCancel: true
  branches:
    include:
      - main
      - stable-*

schedules:
  - cron: 0 9 * * *
    displayName: Nightly
    always: true
    branches:
      include:
        - main
        - stable-*

variables:
  - name: checkoutPath
    value: ansible_collections/community/postgresql
  - name: coverageBranches
    value: main
  - name: pipelinesCoverage
    value: coverage
  - name: entryPoint
    value: tests/utils/shippable/shippable.sh
  - name: fetchDepth
    value: 0

resources:
  containers:
    - container: default
      image: quay.io/ansible/azure-pipelines-test-container:7.0.0

pool: Standard

stages:
  - stage: Python_qualtiy_tools
    displayName: Python quality
    dependsOn: []
    jobs:
      - job: 'Test'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            displayName: Get Python for Python tools.
            inputs:
              versionSpec: '3.11'
              addToPath: false
            name: pyTools
          - script: $(pyTools.pythonLocation)/bin/pip install --upgrade tox
            displayName: Upgrade/Install tox.
          - script: $(pyTools.pythonLocation)/bin/tox -e lint
            displayName: Run tox -e lint

## Sanity & units
  - stage: Ansible_devel
    displayName: Sanity & Units devel
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          targets:
            - name: Sanity
              test: 'devel/sanity/1'
            - name: Units
              test: 'devel/units/1'

  - stage: Ansible_2_19
    displayName: Sanity & Units 2.19
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          targets:
            - name: Sanity
              test: '2.19/sanity/1'
            - name: Units
              test: '2.19/units/1'

  - stage: Ansible_2_18
    displayName: Sanity & Units 2.18
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          targets:
            - name: Sanity
              test: '2.18/sanity/1'
            - name: Units
              test: '2.18/units/1'

  - stage: Ansible_2_17
    displayName: Sanity & Units 2.17
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          targets:
            - name: Sanity
              test: '2.17/sanity/1'
            - name: Units
              test: '2.17/units/1'

## Docker
  - stage: Docker_devel
    displayName: Docker devel
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: devel/linux/{0}/1
          targets:
            - name: Fedora 42
              test: fedora42
            - name: Ubuntu 24.04
              test: ubuntu2404
            - name: Ubuntu 22.04
              test: ubuntu2204

  - stage: Docker_2_19
    displayName: Docker 2.19
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.19/linux/{0}/1
          targets:
            - name: Fedora 41
              test: fedora41
            - name: Ubuntu 24.04
              test: ubuntu2404
            - name: Ubuntu 22.04
              test: ubuntu2204

  - stage: Docker_2_18
    displayName: Docker 2.18
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.18/linux/{0}/1
          targets:
            - name: Fedora 40
              test: fedora40
            - name: Ubuntu 22.04
              test: ubuntu2204

  - stage: Docker_2_17
    displayName: Docker 2.17
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.17/linux/{0}/1
          targets:
            - name: Fedora 39
              test: fedora39
            - name: Ubuntu 22.04
              test: ubuntu2204

## Remote
  - stage: Remote_devel
    displayName: Remote devel
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: devel/{0}/1
          targets:
            - name: RHEL 10.0
              test: rhel/10.0
            - name: RHEL 9.6
              test: rhel/9.6

  - stage: Remote_2_19
    displayName: Remote 2.19
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.19/{0}/1
          targets:
            - name: RHEL 9.5
              test: rhel/9.5

  - stage: Remote_2_18
    displayName: Remote devel
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.18/{0}/1
          targets:
            - name: RHEL 9.4
              test: rhel/9.4

  - stage: Remote_2_17
    displayName: Remote 2.17
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.17/{0}/1
          targets:
            - name: RHEL 9.3
              test: rhel/9.3

  # Keep this as long as the tests work.
  # It allows us to test against PostgreSQL 10.
  # PostgreSQL 13 is still supported, but the closest
  # version we test against is 14.
  # Keeping testing against 10 and 14 covers 13 as well.
  # When these tests stop working and it's hard to fix
  # remove this target and update the documentation.
  - stage: Remote_2_16
    displayName: Remote 2.16
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.16/{0}/1
          targets:
            - name: RHEL 8.8
              test: rhel/8.8

## Finally

  - stage: Summary
    condition: succeededOrFailed()
    dependsOn:
      - Ansible_devel
      - Ansible_2_19
      - Ansible_2_18
      - Ansible_2_17
      - Docker_devel
      - Docker_2_19
      - Docker_2_18
      - Docker_2_17
      - Docker_2_15
      - Remote_devel
      - Remote_2_19
      - Remote_2_18
      - Remote_2_17
      - Remote_2_16
    jobs:
      - template: templates/coverage.yml
